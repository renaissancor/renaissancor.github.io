{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"AR250402/","title":"AR250402","text":""},{"location":"AR250402/#copy-operator-and","title":"Copy Operator and","text":"<pre><code>class CNew\n{\nprivate:\n    int m_i; \n    short m_s; \n\npublic: \n    void SetInt(int _a)\n    {\n        m_i = a; \n    }\n    // Default Assignment operator \n    void operator=(const CNew&amp; _Other){\n        m_i = _Other.m_i; \n        m_s = _Other.m_s; \n\n        return *this; \n    }\npublic: \n    // \uae30\ubcf8 Default Copy operator \ubb34\ub825\ud654 \n    CNew(const CNew &amp; _Other) = delete; // \ub9c9\uc544 \ubc84\ub9ac\uae30 \n    CNew(const CNew &amp; _Other)\n    :m_i(_Other.m_i), m_s(_Other.m_s)\n    {}\n}\n</code></pre> <p>Basic Generator </p> <p>CNew Inst1; // \uae30\ubcf8 \uc0dd\uc131\uc790  CNew Inst1(); // \uc774\ub807\uac8c \uc0dd\uc131 \uc2dc \ud568\uc218 \uc120\uc5b8\uc73c\ub85c \ucef4\ud30c\uc77c\ub7ec\uac00 \uc624\ud574  Inst1.SetInt(10); </p> <p>Copy Generator </p> <p>\ubcf5\uc0ac \uc0dd\uc131\uc790 \uae30\ubcf8 \uc0dd\uc131\uc790 \uc548 \ub9cc\ub4e4\ub2e4\uac00 \ubcf5\uc0ac \uc0dd\uc131\uc790 \uc9c1\uc811 \ub9cc\ub4e4 \uacbd\uc6b0  \uae30\ubcf8 \uc0dd\uc131\uc790 \uad6c\ud604\uc744 \uc78a\uc5b4\ubc84\ub9bc  \ubcf5\uc0ac \uc0dd\uc131\uc790\ub9cc \ub9cc\ub4e4\uba74 \uae30\ubcf8 \uc0dd\uc131\uc790 </p> <p>CNew Inst2(Inst1); </p> <p>Originally no need to make copy operator  But if copy function is implemented  The compiler originally based copy </p> <p>\uc5b4\ub5a0\ud55c \uacbd\uc6b0\uc5d0\ub3c4 \uc0dd\uc131\uc790\uac00 \uad6c\ud604\ub41c \uac8c \uc788\uc73c\uba74 \uae30\ubcf8 \uc0dd\uc131\uc790\uac00 \ucef4\ud30c\uc77c\ub7ec\uc5d0 \uc758\ud574 \uc790\ub3d9 \uc0dd\uc131\ub418\uc9c0 \uc54a\uc74c</p> <p>\ubcf5\uc0ac \uc0dd\uc131\uc790 \uc0dd\uc131 \uc2dc \uae30\ubcf8 \uc0dd\uc131\uc790  \uc989 \ud0c0 \uc0dd\uc131\uc790\ub97c\ub97c \ub9cc\ub4e4 \uc2dc \uae30\ubcf8 \uc0dd\uc131\uc790\ub3c4 \uac19\uc774 \ub9cc\ub4e4\uc5b4\uc57c\ud568 </p> <p>\ub300\uc785 \uc5f0\uc0b0\uc790  CNew Inst3;  Inst3 = Inst1; </p>"}]}